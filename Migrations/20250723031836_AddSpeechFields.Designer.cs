// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NGO_WebAPI_Backend.Models;

#nullable disable

namespace NGO_WebAPI_Backend.Migrations
{
    [DbContext(typeof(NgoplatformDbContext))]
    [Migration("20250723031836_AddSpeechFields")]
    partial class AddSpeechFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Chinese_Taiwan_Stroke_CI_AS")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Category")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("CurrentParticipants")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("SignupDeadline")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("open");

                    b.Property<string>("TargetAudience")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId")
                        .HasName("PK__Activiti__45F4A7914643EE44");

                    b.HasIndex("WorkerId");

                    b.ToTable("Activities", t =>
                        {
                            t.HasTrigger("tr_CheckFullOnRegistration");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Case", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaseId"));

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DetailAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeechToText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeechToTextAudioUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("CaseId")
                        .HasName("PK__Cases__6CAE524C4841F794");

                    b.HasIndex("WorkerId");

                    b.HasIndex(new[] { "IdentityNumber" }, "UQ__Cases__6354A73F80F4F619")
                        .IsUnique()
                        .HasFilter("[IdentityNumber] IS NOT NULL");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.CaseActivityRegistration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegisterTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("RegistrationId")
                        .HasName("PK__CaseActi__6EF58810AFB8FC95");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CaseId");

                    b.ToTable("CaseActivityRegistrations");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.CaseLogin", b =>
                {
                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CaseId")
                        .HasName("PK__CaseLogi__6CAE524CB0B15E21");

                    b.HasIndex(new[] { "Email" }, "UQ__CaseLogi__A9D105346FD037AD")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("CaseLogins");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.CaseOrder", b =>
                {
                    b.Property<int>("CaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaseOrderId"));

                    b.Property<int?>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SupplyId")
                        .HasColumnType("int");

                    b.HasKey("CaseOrderId")
                        .HasName("PK__CaseOrde__4CFB6563687E973E");

                    b.HasIndex("CaseId");

                    b.HasIndex("SupplyId");

                    b.ToTable("CaseOrders");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.EmergencySupplyMatch", b =>
                {
                    b.Property<int>("EmergencyMatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmergencyMatchId"));

                    b.Property<int?>("EmergencyNeedId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MatchDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MatchedByWorkerId")
                        .HasColumnType("int");

                    b.Property<int?>("MatchedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.HasKey("EmergencyMatchId")
                        .HasName("PK__Emergenc__9E89AB71B11CAC01");

                    b.HasIndex("EmergencyNeedId");

                    b.HasIndex("MatchedByWorkerId");

                    b.ToTable("EmergencySupplyMatches");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.EmergencySupplyNeed", b =>
                {
                    b.Property<int>("EmergencyNeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmergencyNeedId"));

                    b.Property<int?>("CaseId")
                        .HasColumnType("int");

                    b.Property<int?>("CollectedQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Priority")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SupplyName")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("EmergencyNeedId")
                        .HasName("PK__Emergenc__D9A4C6FA1D1F8990");

                    b.HasIndex("CaseId");

                    b.HasIndex("WorkerId");

                    b.ToTable("EmergencySupplyNeeds");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("NewsId")
                        .HasName("PK__News__954EBDF308AA3080");

                    b.ToTable("News");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.RegularDistributionBatch", b =>
                {
                    b.Property<int>("DistributionBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistributionBatchId"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("ApprovedByWorkerId")
                        .HasColumnType("int");

                    b.Property<int>("CaseCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedByWorkerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DistributionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TotalSupplyItems")
                        .HasColumnType("int");

                    b.HasKey("DistributionBatchId")
                        .HasName("PK__RegularD__548A1428EA2B5191");

                    b.HasIndex("ApprovedByWorkerId");

                    b.HasIndex("CreatedByWorkerId");

                    b.ToTable("RegularDistributionBatch", (string)null);
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.RegularSuppliesNeed", b =>
                {
                    b.Property<int>("RegularNeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegularNeedId"));

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<int?>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PickupDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("SupplyId")
                        .HasColumnType("int");

                    b.HasKey("RegularNeedId")
                        .HasName("PK__RegularS__12A5D64A7B60206E");

                    b.HasIndex("CaseId");

                    b.HasIndex("SupplyId");

                    b.ToTable("RegularSuppliesNeeds");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.RegularSupplyMatch", b =>
                {
                    b.Property<int>("RegularMatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegularMatchId"));

                    b.Property<DateTime?>("MatchDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MatchedByWorkerId")
                        .HasColumnType("int");

                    b.Property<int?>("MatchedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("RegularNeedId")
                        .HasColumnType("int");

                    b.HasKey("RegularMatchId")
                        .HasName("PK__RegularS__98CD5428C2462B4D");

                    b.HasIndex("MatchedByWorkerId");

                    b.HasIndex("RegularNeedId");

                    b.ToTable("RegularSupplyMatches");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("CaseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("行程");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("個案訪問");

                    b.Property<string>("Priority")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B49AB904B95");

                    b.HasIndex("CaseId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Supply", b =>
                {
                    b.Property<int>("SupplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplyId"));

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SupplyCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SupplyDescription")
                        .HasColumnType("text");

                    b.Property<string>("SupplyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("SupplyPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("SupplyQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SupplyType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SupplyId")
                        .HasName("PK__Supplies__7CDD6CAE98A6C393");

                    b.HasIndex("SupplyCategoryId");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.SupplyCategory", b =>
                {
                    b.Property<int>("SupplyCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplyCategoryId"));

                    b.Property<string>("SupplyCategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SupplyCategoryId")
                        .HasName("PK__SupplyCa__5ED6BB7689233BBE");

                    b.ToTable("SupplyCategories");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CA782D7E8");

                    b.HasIndex(new[] { "IdentityNumber" }, "UQ__Users__6354A73FE3EC02B5")
                        .IsUnique()
                        .HasFilter("[IdentityNumber] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105343C86E0BF")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.UserActivityRegistration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfCompanions")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegisterTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId")
                        .HasName("PK__UserActi__6EF58810AB33EBAD");

                    b.HasIndex("ActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("UserActivityRegistrations");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.UserOrder", b =>
                {
                    b.Property<int>("UserOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserOrderId"));

                    b.Property<int?>("EmergencyNeedId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OrderSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserOrderId")
                        .HasName("PK__UserOrde__35D02767D337C2D3");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "OrderNumber" }, "UK_UserOrders_OrderNumber")
                        .IsUnique();

                    b.ToTable("UserOrders");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.UserOrderDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<int?>("EmergencyNeedId")
                        .HasColumnType("int");

                    b.Property<string>("OrderSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SupplyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("UserOrderId")
                        .HasColumnType("int");

                    b.HasKey("DetailId")
                        .HasName("PK__UserOrde__135C316DFCE52535");

                    b.HasIndex("SupplyId");

                    b.HasIndex("UserOrderId");

                    b.ToTable("UserOrderDetails");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.VwActivitiesFrontend", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActivityName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CurrentParticipants")
                        .HasColumnType("int");

                    b.Property<string>("DisplayStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("vw_Activities_Frontend", (string)null);
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.VwActivitiesStatus", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActivityName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Category")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("CurrentParticipants")
                        .HasColumnType("int");

                    b.Property<int?>("DaysRemaining")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("SignupDeadline")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("TargetAudience")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TimeBasedStatus")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("中文狀態")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("原始狀態")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("狀態檢查")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("系統建議狀態")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.ToTable((string)null);

                    b.ToView("vw_Activities_Status", (string)null);
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("staff");

                    b.HasKey("WorkerId")
                        .HasName("PK__Workers__077C88266D580019");

                    b.HasIndex(new[] { "Email" }, "UQ__Workers__A9D10534AB50B5C5")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Activity", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Worker", "Worker")
                        .WithMany("Activities")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("FK__Activitie__Worke__03F0984C");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Case", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Worker", "Worker")
                        .WithMany("Cases")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("FK__Cases__WorkerId__09A971A2");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.CaseActivityRegistration", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Activity", "Activity")
                        .WithMany("CaseActivityRegistrations")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK__CaseActiv__Activ__05D8E0BE");

                    b.HasOne("NGO_WebAPI_Backend.Models.Case", "Case")
                        .WithMany("CaseActivityRegistrations")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK__CaseActiv__CaseI__04E4BC85");

                    b.Navigation("Activity");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.CaseLogin", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Case", "Case")
                        .WithOne("CaseLogin")
                        .HasForeignKey("NGO_WebAPI_Backend.Models.CaseLogin", "CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseLogin__CaseI__06CD04F7");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.CaseOrder", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Case", "Case")
                        .WithMany("CaseOrders")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK__CaseOrder__CaseI__07C12930");

                    b.HasOne("NGO_WebAPI_Backend.Models.Supply", "Supply")
                        .WithMany("CaseOrders")
                        .HasForeignKey("SupplyId")
                        .HasConstraintName("FK__CaseOrder__Suppl__08B54D69");

                    b.Navigation("Case");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.EmergencySupplyMatch", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.EmergencySupplyNeed", "EmergencyNeed")
                        .WithMany("EmergencySupplyMatches")
                        .HasForeignKey("EmergencyNeedId")
                        .HasConstraintName("FK__Emergency__Emerg__0A9D95DB");

                    b.HasOne("NGO_WebAPI_Backend.Models.Worker", "MatchedByWorker")
                        .WithMany("EmergencySupplyMatches")
                        .HasForeignKey("MatchedByWorkerId")
                        .HasConstraintName("FK__Emergency__Match__0B91BA14");

                    b.Navigation("EmergencyNeed");

                    b.Navigation("MatchedByWorker");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.EmergencySupplyNeed", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Case", "Case")
                        .WithMany("EmergencySupplyNeeds")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK__Emergency__CaseI__0C85DE4D");

                    b.HasOne("NGO_WebAPI_Backend.Models.Worker", "Worker")
                        .WithMany("EmergencySupplyNeeds")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("FK__Emergency__Worke__0E6E26BF");

                    b.Navigation("Case");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.RegularDistributionBatch", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Worker", "ApprovedByWorker")
                        .WithMany("RegularDistributionBatchApprovedByWorkers")
                        .HasForeignKey("ApprovedByWorkerId")
                        .HasConstraintName("FK__RegularDi__Appro__41EDCAC5");

                    b.HasOne("NGO_WebAPI_Backend.Models.Worker", "CreatedByWorker")
                        .WithMany("RegularDistributionBatchCreatedByWorkers")
                        .HasForeignKey("CreatedByWorkerId")
                        .IsRequired()
                        .HasConstraintName("FK__RegularDi__Creat__40F9A68C");

                    b.Navigation("ApprovedByWorker");

                    b.Navigation("CreatedByWorker");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.RegularSuppliesNeed", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Case", "Case")
                        .WithMany("RegularSuppliesNeeds")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK__RegularSu__CaseI__0F624AF8");

                    b.HasOne("NGO_WebAPI_Backend.Models.Supply", "Supply")
                        .WithMany("RegularSuppliesNeeds")
                        .HasForeignKey("SupplyId")
                        .HasConstraintName("FK__RegularSu__Suppl__10566F31");

                    b.Navigation("Case");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.RegularSupplyMatch", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Worker", "MatchedByWorker")
                        .WithMany("RegularSupplyMatches")
                        .HasForeignKey("MatchedByWorkerId")
                        .HasConstraintName("FK__RegularSu__Match__123EB7A3");

                    b.HasOne("NGO_WebAPI_Backend.Models.RegularSuppliesNeed", "RegularNeed")
                        .WithMany("RegularSupplyMatches")
                        .HasForeignKey("RegularNeedId")
                        .HasConstraintName("FK__RegularSu__Regul__114A936A");

                    b.Navigation("MatchedByWorker");

                    b.Navigation("RegularNeed");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Schedule", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Case", "Case")
                        .WithMany("Schedules")
                        .HasForeignKey("CaseId")
                        .HasConstraintName("FK__Schedules__CaseI__14270015");

                    b.HasOne("NGO_WebAPI_Backend.Models.Worker", "Worker")
                        .WithMany("Schedules")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("FK__Schedules__Worke__1332DBDC");

                    b.Navigation("Case");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Supply", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.SupplyCategory", "SupplyCategory")
                        .WithMany("Supplies")
                        .HasForeignKey("SupplyCategoryId")
                        .HasConstraintName("FK__Supplies__Supply__151B244E");

                    b.Navigation("SupplyCategory");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.UserActivityRegistration", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Activity", "Activity")
                        .WithMany("UserActivityRegistrations")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK__UserActiv__Activ__17036CC0");

                    b.HasOne("NGO_WebAPI_Backend.Models.User", "User")
                        .WithMany("UserActivityRegistrations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserActiv__UserI__160F4887");

                    b.Navigation("Activity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.UserOrder", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.User", "User")
                        .WithMany("UserOrders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserOrder__UserI__19DFD96B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.UserOrderDetail", b =>
                {
                    b.HasOne("NGO_WebAPI_Backend.Models.Supply", "Supply")
                        .WithMany("UserOrderDetails")
                        .HasForeignKey("SupplyId")
                        .HasConstraintName("FK__UserOrder__Suppl__18EBB532");

                    b.HasOne("NGO_WebAPI_Backend.Models.UserOrder", "UserOrder")
                        .WithMany("UserOrderDetails")
                        .HasForeignKey("UserOrderId")
                        .HasConstraintName("FK__UserOrder__UserO__17F790F9");

                    b.Navigation("Supply");

                    b.Navigation("UserOrder");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Activity", b =>
                {
                    b.Navigation("CaseActivityRegistrations");

                    b.Navigation("UserActivityRegistrations");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Case", b =>
                {
                    b.Navigation("CaseActivityRegistrations");

                    b.Navigation("CaseLogin");

                    b.Navigation("CaseOrders");

                    b.Navigation("EmergencySupplyNeeds");

                    b.Navigation("RegularSuppliesNeeds");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.EmergencySupplyNeed", b =>
                {
                    b.Navigation("EmergencySupplyMatches");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.RegularSuppliesNeed", b =>
                {
                    b.Navigation("RegularSupplyMatches");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Supply", b =>
                {
                    b.Navigation("CaseOrders");

                    b.Navigation("RegularSuppliesNeeds");

                    b.Navigation("UserOrderDetails");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.SupplyCategory", b =>
                {
                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.User", b =>
                {
                    b.Navigation("UserActivityRegistrations");

                    b.Navigation("UserOrders");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.UserOrder", b =>
                {
                    b.Navigation("UserOrderDetails");
                });

            modelBuilder.Entity("NGO_WebAPI_Backend.Models.Worker", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Cases");

                    b.Navigation("EmergencySupplyMatches");

                    b.Navigation("EmergencySupplyNeeds");

                    b.Navigation("RegularDistributionBatchApprovedByWorkers");

                    b.Navigation("RegularDistributionBatchCreatedByWorkers");

                    b.Navigation("RegularSupplyMatches");

                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
